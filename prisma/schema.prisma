// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int   @id @default(autoincrement())
  username  String    @unique @db.VarChar(255)
  name      String
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articles  Article[]
}

model Role {
  id        Int   @id @default(autoincrement())
  name      String @db.VarChar(255)
  createdAt DateTime @default(now())
  users     User[]
}

model Article {
  id        Int   @id @default(autoincrement())
  title     String @db.VarChar(100)
  description String @db.VarChar(255)
  content   String @db.Text
  image     Image?
  video     Video?
  author    User   @relation(fields: [authorId], references: [id])
  authorId  Int
  category  Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  status    Status   @relation(fields: [statusId], references: [id])
  statusId  Int 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comments  Comment[]
}

model Image {
  id        Int   @id @default(autoincrement())
  url       String @db.Text
  article   Article @relation(fields: [articleId], references: [id])
  articleId Int     @unique
}

model Video {
  id        Int   @id @default(autoincrement())
  url       String @db.Text
  article   Article @relation(fields: [articleId], references: [id])
  articleId Int     @unique
}

model Status {
  id        Int   @id @default(autoincrement())
  name      String @db.VarChar(255)
  createdAt DateTime @default(now())
  articles  Article[]
}

model Category {
  id        Int   @id @default(autoincrement())
  name      String @db.VarChar(255)
  createdAt DateTime @default(now())
  articles  Article[]
}

model Comment {
  id        Int   @id @default(autoincrement())
  content   String @db.Text
  article   Article @relation(fields: [articleId], references: [id])
  articleId Int
  createdAt DateTime @default(now())
}
